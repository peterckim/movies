{"ast":null,"code":"import _classCallCheck from \"/Users/peterckim/Desktop/movies/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peterckim/Desktop/movies/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peterckim/Desktop/movies/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peterckim/Desktop/movies/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peterckim/Desktop/movies/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peterckim/Desktop/movies/src/pages/MoviePage.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchGenres, fetchMovies } from \"../actions/movieActions\";\nimport MovieInformation from \"../components/MovieInformation\";\nimport MovieJumbotron from \"../components/MovieJumbotron\";\nimport Poster from \"../components/Poster\";\n\nvar MoviePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MoviePage, _Component);\n\n  function MoviePage() {\n    _classCallCheck(this, MoviePage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MoviePage).apply(this, arguments));\n  }\n\n  _createClass(MoviePage, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.fetchGenres();\n      this.props.fetchMovies();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      if (!this.props.movies.length || !this.props.genres.length) {\n        return null;\n      }\n\n      var movie = this.props.movies.find(function (movie) {\n        return movie.id == _this.props.match.params.movieId;\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Poster, {\n        movie: movie,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(MovieJumbotron, {\n        movie: movie,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(MovieInformation, {\n        movie: movie,\n        genres: this.props.genres,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MoviePage;\n}(Component);\n\nMoviePage.propTypes = {\n  fetchGenres: PropTypes.func.isRequired,\n  fetchMovies: PropTypes.func.isRequired,\n  genres: PropTypes.array.isRequired,\n  movies: PropTypes.array.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    genres: state.movies.genres,\n    movies: state.movies.movies\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchGenres: fetchGenres,\n  fetchMovies: fetchMovies\n})(MoviePage);","map":{"version":3,"sources":["/Users/peterckim/Desktop/movies/src/pages/MoviePage.js"],"names":["React","Component","PropTypes","connect","fetchGenres","fetchMovies","MovieInformation","MovieJumbotron","Poster","MoviePage","props","movies","length","genres","movie","find","id","match","params","movieId","propTypes","func","isRequired","array","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,yBAAzC;AAEA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;IAEMC,S;;;;;;;;;;;;;yCACiB;AACnB,WAAKC,KAAL,CAAWN,WAAX;AACA,WAAKM,KAAL,CAAWL,WAAX;AACD;;;6BAEQ;AAAA;;AACP,UAAI,CAAC,KAAKK,KAAL,CAAWC,MAAX,CAAkBC,MAAnB,IAA6B,CAAC,KAAKF,KAAL,CAAWG,MAAX,CAAkBD,MAApD,EAA4D;AAC1D,eAAO,IAAP;AACD;;AAED,UAAME,KAAK,GAAG,KAAKJ,KAAL,CAAWC,MAAX,CAAkBI,IAAlB,CAAuB,UAAAD,KAAK,EAAI;AAC5C,eAAOA,KAAK,CAACE,EAAN,IAAY,KAAI,CAACN,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBC,OAA3C;AACD,OAFa,CAAd;AAIA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAEL,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAEA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEA,KAAzB;AAAgC,QAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWG,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD;;;;EAtBqBZ,S;;AAyBxBQ,SAAS,CAACW,SAAV,GAAsB;AACpBhB,EAAAA,WAAW,EAAEF,SAAS,CAACmB,IAAV,CAAeC,UADR;AAEpBjB,EAAAA,WAAW,EAAEH,SAAS,CAACmB,IAAV,CAAeC,UAFR;AAGpBT,EAAAA,MAAM,EAAEX,SAAS,CAACqB,KAAV,CAAgBD,UAHJ;AAIpBX,EAAAA,MAAM,EAAET,SAAS,CAACqB,KAAV,CAAgBD;AAJJ,CAAtB;;AAOA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCZ,IAAAA,MAAM,EAAEY,KAAK,CAACd,MAAN,CAAaE,MADW;AAEhCF,IAAAA,MAAM,EAAEc,KAAK,CAACd,MAAN,CAAaA;AAFW,GAAL;AAAA,CAA7B;;AAKA,eAAeR,OAAO,CACpBqB,eADoB,EAEpB;AAAEpB,EAAAA,WAAW,EAAXA,WAAF;AAAeC,EAAAA,WAAW,EAAXA;AAAf,CAFoB,CAAP,CAGbI,SAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchGenres, fetchMovies } from \"../actions/movieActions\";\n\nimport MovieInformation from \"../components/MovieInformation\";\nimport MovieJumbotron from \"../components/MovieJumbotron\";\nimport Poster from \"../components/Poster\";\n\nclass MoviePage extends Component {\n  componentWillMount() {\n    this.props.fetchGenres();\n    this.props.fetchMovies();\n  }\n\n  render() {\n    if (!this.props.movies.length || !this.props.genres.length) {\n      return null;\n    }\n\n    const movie = this.props.movies.find(movie => {\n      return movie.id == this.props.match.params.movieId;\n    });\n\n    return (\n      <div>\n        <Poster movie={movie} />\n        <MovieJumbotron movie={movie} />\n        <MovieInformation movie={movie} genres={this.props.genres} />\n      </div>\n    );\n  }\n}\n\nMoviePage.propTypes = {\n  fetchGenres: PropTypes.func.isRequired,\n  fetchMovies: PropTypes.func.isRequired,\n  genres: PropTypes.array.isRequired,\n  movies: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  genres: state.movies.genres,\n  movies: state.movies.movies\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchGenres, fetchMovies }\n)(MoviePage);\n"]},"metadata":{},"sourceType":"module"}