{"ast":null,"code":"import _classCallCheck from \"/Users/peterckim/Desktop/movies-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peterckim/Desktop/movies-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peterckim/Desktop/movies-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peterckim/Desktop/movies-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peterckim/Desktop/movies-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peterckim/Desktop/movies-app/client/src/pages/HomePage.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchMovies } from \"../actions/movieActions\";\nimport Movies from \"../components/Movies\";\nimport Banner from \"../components/Banner\";\n\nvar HomePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HomePage, _Component);\n\n  function HomePage() {\n    _classCallCheck(this, HomePage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(HomePage).apply(this, arguments));\n  }\n\n  _createClass(HomePage, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.fetchMovies();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var movie = \"fetching\"; // if (this.props.movies.length) {\n      //   movie = this.props.movies[0];\n      // }\n\n      console.log(this.props.movies);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return HomePage;\n}(Component);\n\nHomePage.propTypes = {\n  fetchMovies: PropTypes.func.isRequired,\n  movies: PropTypes.array.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    movies: state.movies.movies\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchMovies: fetchMovies\n})(HomePage);","map":{"version":3,"sources":["/Users/peterckim/Desktop/movies-app/client/src/pages/HomePage.js"],"names":["React","Component","PropTypes","connect","fetchMovies","Movies","Banner","HomePage","props","movie","console","log","movies","propTypes","func","isRequired","array","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;IAEMC,Q;;;;;;;;;;;;;yCACiB;AACnB,WAAKC,KAAL,CAAWJ,WAAX;AACD;;;6BAEQ;AACP,UAAIK,KAAK,GAAG,UAAZ,CADO,CAGP;AACA;AACA;;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,MAAvB;AAEA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAMD;;;;EApBoBX,S;;AAuBvBM,QAAQ,CAACM,SAAT,GAAqB;AACnBT,EAAAA,WAAW,EAAEF,SAAS,CAACY,IAAV,CAAeC,UADT;AAEnBH,EAAAA,MAAM,EAAEV,SAAS,CAACc,KAAV,CAAgBD;AAFL,CAArB;;AAKA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCN,IAAAA,MAAM,EAAEM,KAAK,CAACN,MAAN,CAAaA;AADW,GAAL;AAAA,CAA7B;;AAIA,eAAeT,OAAO,CACpBc,eADoB,EAEpB;AAAEb,EAAAA,WAAW,EAAXA;AAAF,CAFoB,CAAP,CAGbG,QAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchMovies } from \"../actions/movieActions\";\n\nimport Movies from \"../components/Movies\";\nimport Banner from \"../components/Banner\";\n\nclass HomePage extends Component {\n  componentWillMount() {\n    this.props.fetchMovies();\n  }\n\n  render() {\n    let movie = \"fetching\";\n\n    // if (this.props.movies.length) {\n    //   movie = this.props.movies[0];\n    // }\n\n    console.log(this.props.movies);\n\n    return (\n      <div>\n        {/* <Banner movies={this.props.movies} movie={movie} />\n        <Movies movies={this.props.movies} /> */}\n      </div>\n    );\n  }\n}\n\nHomePage.propTypes = {\n  fetchMovies: PropTypes.func.isRequired,\n  movies: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  movies: state.movies.movies\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchMovies }\n)(HomePage);\n"]},"metadata":{},"sourceType":"module"}